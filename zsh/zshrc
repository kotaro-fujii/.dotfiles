# ====================
# シェル判定用関数
# ====================

# bashかどうかを判定
function is_bash() {
  [[ $0 =~ bash ]]
}

# zshかどうかを判定
function is_zsh() {
  [[ $0 =~ zsh ]]
}

# ====================
# シェルごとの設定
# ====================

if is_zsh; then
  # oh-my-zsh の設定
  export ZSH="$HOME/.oh-my-zsh"
  export ZSH_CUSTOM="$HOME/.zsh"
  ZSH_THEME="fkota_mgutz"      # テーマを指定
  plugins=(git)                # 使用するプラグイン
  source "$ZSH/oh-my-zsh.sh"   # oh-my-zsh本体を読み込み

elif is_bash; then
  # bash用のプロンプト設定
  PS1='\[\e[1;36m\]@\h \[\e[1;32m\]\W \[\e[1;31m\]\$\[\e[0m\] '
  alias ls='ls --color=tty'    # lsに色をつける
fi

# ====================
# アプリケーション初期化
# ====================

if is_zsh; then
  # fzfのzsh用設定
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
elif is_bash; then
  # fzfのbash用設定
  [ -f ~/.fzf.bash ] && source ~/.fzf.bash
fi

# ====================
# よく使うコマンドのエイリアス
# ====================

## ディレクトリ移動系
alias c='cd'
alias b='cd ../'

# lsコマンド系
# 大文字コマンドは隠しを表示
alias l='ls -F'   # パーミッションやファイル形式がみやすい
alias ll='ls -l'  # 詳細表示＋隠しファイル
alias lr='ls -R'  # 再帰的に表示

alias LS='ls -A'
alias L='ls -AF'
alias LL='ls -Al'
alias LR='ls -AR'

# その他基本系
alias wl='wc -l'
alias rl='readlink'
alias rp='realpath'
alias G='grep'
alias GE='grep -E'
alias zz='source ~/.zshrc'    # zshrcを再読み込み

# アプリケーション起動系
function e() {
  realpath -P $1 | sed -E 's|^/mnt/([a-z])|\U\1:|' | sed 's/\//\\\\/g'  | xargs explorer.exe
}
alias py='python'
alias lltx='lualatex --shell-escape --halt-on-error'
alias bat='bat -pp'
alias nv='nvim'
alias tm='tmux'
alias em='emacs -nw'
alias g='git'
alias ty='typst'
alias tyw='typst watch'
alias tyc='typst compile'
function tywin () {
  powershell.exe "typst w $@"
}
alias caf="conda activate \$(conda env list | tr -d \* | tail -n +4 | head -n -1 | awk '{print \$1}' | fzf)"
alias cac="conda activate"
alias cif="conda info -e"
alias maf="mamba activate \$(mamba env list | tr -d \* | tail -n +3 | awk '{print \$1}' | fzf)"
alias mac="mamba activate"
alias mif="mamba info -e"

# ====================
# ハッシュディレクトリ
# ====================
hash -d dot=$HOME/.dotfiles  # ~dot で ~/.dotfiles に移動できる

# ====================
# 環境変数
# ====================
# 自作スクリプトをPATHに追加
export PATH="$HOME/.dotfiles/bin:$PATH"

# ====================
# 操作感の変更
# ====================
if is_zsh; then
  # 単語区切りの文字設定
  export WORDCHARS='*?_-.~!#$%^[]'

elif is_bash; then
  # Ctrl+Wの挙動を変更してパスの途中でも消しやすく
  stty werase undef
  bind '"\C-w": unix-filename-rubout'
fi

# ====================
# mamba, conda初期化
# ====================

if is_zsh; then
  :
  ## >>> mamba initialize >>>
  ## !! Contents within this block are managed by 'mamba shell init' !!
  #export MAMBA_EXE="$HOME/.dotfiles/miniforge3/bin/mamba";
  #export MAMBA_ROOT_PREFIX="$HOME/.dotfiles/miniforge3";
  #__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
  #if [ $? -eq 0 ]; then
  #    eval "$__mamba_setup"
  #else
  #    alias mamba="$MAMBA_EXE"  # Fallback on help from mamba activate
  #fi
  #unset __mamba_setup
  ## <<< mamba initialize <<<

elif is_bash; then
  # >>> mamba initialize >>>
  # !! Contents within this block are managed by 'mamba shell init' !!
  export MAMBA_EXE="$HOME/.dotfiles/miniforge3/bin/mamba";
  export MAMBA_ROOT_PREFIX="$HOME/.dotfiles/miniforge3";
  __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__mamba_setup"
  else
      alias mamba="$MAMBA_EXE"  # Fallback on help from mamba activate
  fi
  unset __mamba_setup
  # <<< mamba initialize <<<
fi

# ====================
# ローカル設定を読み込み
# ====================
__local_zshrc=~/.zshrc.local
[ -e $__local_zshrc ] && source $__local_zshrc
unset __local_zshrc


